# -*- coding: utf-8 -*-
"""Contextual Expected Runs.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IQu1meIF5EPopyQOr1XvEAa9f-JZORi0
"""

from google.colab import drive

# Mount Google Drive
drive.mount('/content/drive')

import pandas as pd
file_path = '/content/drive/My Drive/modelpred.csv'

df = pd.read_csv(file_path)
print(df.head())

df = pd.read_csv(file_path)

# Create the 'nth_ball' column
df['nth_ball'] = 120 - df['inns_balls_rem']

# Check the result
print(df.head())

df = df[['nth_ball', 'cur_bat_bf', 'inns_wkts', 'inns_rr', 'batruns']]
df

df.isnull().sum()

X = df.drop(columns=['batruns'])
y = df['batruns']

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)

X_train

"""
#Initialize & Train the Regression Model"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Initialize and train the linear regression model
lr_model = LinearRegression()
lr_model.fit(X_train, y_train)

# Predict on the test set
y_pred = lr_model.predict(X_test)

# Evaluate the model's performance
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

# Print the evaluation metrics
print("Mean Squared Error:", mse)
print("R-squared:", r2)

print("Coefficients:", lr_model.coef_)
print("Intercept:", lr_model.intercept_)

print(X.dtypes)

import joblib

# Save the model to a file
joblib_file = '/content/drive/My Drive/linear_regression_model.pkl'
joblib.dump(lr_model, joblib_file)

print(f"Model saved to {joblib_file}")